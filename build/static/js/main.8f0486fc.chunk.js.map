{"version":3,"sources":["ImageDiv.js","App.js","serviceWorker.js","index.js"],"names":["PopUp","posed","div","open","x","delayChildren","staggerChildren","closed","delay","Item1","opacity","Item2","ImageDiv","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","width","height","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","react_default","a","createElement","className","pose","isOpen","src","url1","alt","url2","url3","url4","url5","url6","React","Component","App","img_cat1","undefined","img_cat2","img_cat3","img_cat4","img_cat5","img_cat6","getCat","_callee","e","cat1","cat2","cat3","cat4","cat5","cat6","data1","data2","data3","data4","data5","data6","regenerator_default","wrap","_context","prev","next","preventDefault","fetch","sent","json","console","log","url","stop","Button","variant","as","type","value","size","block","onClick","src_ImageDiv_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f0486fc.chunk.js","sourcesContent":["import React from 'react';\nimport posed from 'react-pose';\nimport './ImageDiv.css';\n\nconst PopUp = posed.div({\n    open:{\n        x:'0%',\n        delayChildren:360,\n        staggerChildren:60,\n    },\n    closed:{x:'-100%',delay:360,\n\n    }\n});\n\nconst Item1 =posed.div({\n    open:{x:0,opacity:1},\n    closed:{x:100,opacity:0},\n});\nconst Item2 =posed.div({\n    open:{x:0,opacity:1},\n    closed:{x:100,opacity:0},\n});\nclass ImageDiv extends React.Component{\n    constructor(props) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n    \n    componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n    }\n    render(){\n        return(\n            <div>\n                <PopUp  className=\"PopUp\" pose={this.props.isOpen?'open':'closed'}>\n                    <Item1 className=\"item-1\" ><div className=\"innerdiv\"><img src={this.props.url1} alt=\"cute cat\"></img></div></Item1>\n                    <Item1 className=\"item-1\" ><div className=\"innerdiv\"><img src={this.props.url2} alt=\"cute cat\"></img></div></Item1>\n                    <Item1 className=\"item-1\" ><div className=\"innerdiv\"><img src={this.props.url3} alt=\"cute cat\"></img></div></Item1>\n                </PopUp>\n                <PopUp className='PopUp' pose={this.props.isOpen?'open':'closed'}>\n                    <Item2 className=\"item-2\" ><div className=\"innerdiv\"><img src={this.props.url4} alt=\"cute cat\"></img></div></Item2>\n                    <Item2 className=\"item-2\" ><div className=\"innerdiv\"><img src={this.props.url5} alt=\"cute cat\"></img></div></Item2>\n                    <Item2 className=\"item-2\" ><div className=\"innerdiv\"><img src={this.props.url6} alt=\"cute cat\"></img></div></Item2>\n                </PopUp>\n            </div>\n        );\n    }\n}\n\nexport default ImageDiv;","import React, { Component } from 'react';\nimport './App.css';\nimport {Button} from 'react-bootstrap';\nimport ImageDiv from './ImageDiv';\nclass App extends Component {\n  state={\n    img_cat1:undefined,\n    img_cat2:undefined,\n    img_cat3:undefined,\n    img_cat4:undefined,\n    img_cat5:undefined,\n    img_cat6:undefined,\n    isOpen:false,\n  };\n  getCat=async(e)=>{\n    e.preventDefault();\n    const cat1= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const cat2= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const cat3= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const cat4= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const cat5= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const cat6= await fetch(\"https://api.thecatapi.com/v1/images/search\");\n    const data1=await cat1.json();\n    const data2=await cat2.json();\n    const data3=await cat3.json();\n    const data4=await cat4.json();\n    const data5=await cat5.json();\n    const data6=await cat6.json();\n    console.log(data1[0].url);\n    if (this.state.isOpen===false){\n      this.setState({\n        isOpen:true\n      });\n    }else{\n      this.setState({\n        isOpen:false\n      });\n    }\n    this.setState({\n      img_cat1: data1[0].url,\n      img_cat2: data2[0].url,\n      img_cat3: data3[0].url,\n      img_cat4: data4[0].url,\n      img_cat5: data5[0].url,\n      img_cat6: data6[0].url,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div>\n          <Button variant=\"outline-primary\" as=\"input\" type=\"reset\" value=\"reset\" size=\"lg\" block onClick={this.getCat}></Button>\n        </div>\n        <div>\n          <ImageDiv url1={this.state.img_cat1}\n          url2={this.state.img_cat2}\n          url3={this.state.img_cat3}\n          url4={this.state.img_cat4}\n          url5={this.state.img_cat5}\n          url6={this.state.img_cat6}\n          isOpen={this.state.isOpen}\n          />\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}